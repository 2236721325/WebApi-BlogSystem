// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBlog.API.Models.Context;

#nullable disable

namespace MyBlog.API.Models.Migrations
{
    [DbContext(typeof(MyBlogContext))]
    [Migration("20220720111615_4")]
    partial class _4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyBlog.API.Models.BlogNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrowseCount")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 7, 20, 19, 16, 14, 863, DateTimeKind.Local).AddTicks(6658));

                    b.Property<int>("LikeCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("TypeInfoId")
                        .HasColumnType("int");

                    b.Property<int>("WriterInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeInfoId");

                    b.HasIndex("WriterInfoId");

                    b.ToTable("BlogNewses");
                });

            modelBuilder.Entity("MyBlog.API.Models.TypeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 7, 20, 19, 16, 14, 864, DateTimeKind.Local).AddTicks(747));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.ToTable("TypeInfos");
                });

            modelBuilder.Entity("MyBlog.API.Models.WriterInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 7, 20, 19, 16, 14, 863, DateTimeKind.Local).AddTicks(9899));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("UserPwd")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("WriterInfos");
                });

            modelBuilder.Entity("MyBlog.API.Models.BlogNews", b =>
                {
                    b.HasOne("MyBlog.API.Models.TypeInfo", "TypeInfo")
                        .WithMany("BlogNewses")
                        .HasForeignKey("TypeInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyBlog.API.Models.WriterInfo", "WriterInfo")
                        .WithMany("BlogNewses")
                        .HasForeignKey("WriterInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeInfo");

                    b.Navigation("WriterInfo");
                });

            modelBuilder.Entity("MyBlog.API.Models.TypeInfo", b =>
                {
                    b.Navigation("BlogNewses");
                });

            modelBuilder.Entity("MyBlog.API.Models.WriterInfo", b =>
                {
                    b.Navigation("BlogNewses");
                });
#pragma warning restore 612, 618
        }
    }
}
